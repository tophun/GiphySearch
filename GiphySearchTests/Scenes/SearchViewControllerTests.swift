//
//  SearchViewControllerTests.swift
//  GiphySearch
//
//  Created by Collie on 2022/06/29.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import GiphySearch
import XCTest

class SearchViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: SearchViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupSearchViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupSearchViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Search", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "SearchViewController") as! SearchViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class SearchBusinessLogicSpy: SearchBusinessLogic {
        var trendingIsCalled = false
        var trendingRequest: Search.Trending.Request!
        func trending(request: Search.Trending.Request) {
            trendingIsCalled = true
            self.trendingRequest = request
        }
        
        var searchIsCalled = false
        func search(request: Search.Search.Request) {
            searchIsCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldTrendingWhenViewIsLoaded() {
        // Given
        let spy = SearchBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Then
        XCTAssertTrue(spy.trendingIsCalled, "viewDidLoad() should ask the interactor to do something")
        XCTAssertEqual(spy.trendingRequest.offset, 0)
    }
    
    func testDisplaySomething() {
        // Given
        //let viewModel = Search.Something.ViewModel()
        
        // When
        //loadView()
        //sut.displaySomething(viewModel: viewModel)
        
        // Then
        //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
    }
}
